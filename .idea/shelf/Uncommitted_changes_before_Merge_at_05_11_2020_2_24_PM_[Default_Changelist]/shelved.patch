Index: .idea/intellij-javadocs-4.0.1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/intellij-javadocs-4.0.1.xml	(date 1604609637224)
+++ .idea/intellij-javadocs-4.0.1.xml	(date 1604609637224)
@@ -0,0 +1,204 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="JavaDocConfiguration">
+    <GENERAL>
+      <MODE>UPDATE</MODE>
+      <OVERRIDDEN_METHODS>false</OVERRIDDEN_METHODS>
+      <SPLITTED_CLASS_NAME>true</SPLITTED_CLASS_NAME>
+      <LEVELS>
+        <LEVEL>FIELD</LEVEL>
+        <LEVEL>METHOD</LEVEL>
+        <LEVEL>TYPE</LEVEL>
+      </LEVELS>
+      <VISIBILITIES>
+        <VISIBILITY>PROTECTED</VISIBILITY>
+        <VISIBILITY>PUBLIC</VISIBILITY>
+        <VISIBILITY>DEFAULT</VISIBILITY>
+      </VISIBILITIES>
+    </GENERAL>
+    <TEMPLATES>
+      <CLASSES>
+        <CLASS>
+          <KEY>^.*(public|protected|private)*.+interface\s+\w+.*</KEY>
+          <VALUE>/**\n
+ * The interface ${name}.\n
+&lt;#if element.typeParameters?has_content&gt;        * \n
+&lt;/#if&gt;
+&lt;#list element.typeParameters as typeParameter&gt;
+        * @param &lt;${typeParameter.name}&gt; the type parameter\n
+&lt;/#list&gt;
+ */</VALUE>
+        </CLASS>
+        <CLASS>
+          <KEY>^.*(public|protected|private)*.+enum\s+\w+.*</KEY>
+          <VALUE>/**\n
+ * The enum ${name}.\n
+ */</VALUE>
+        </CLASS>
+        <CLASS>
+          <KEY>^.*(public|protected|private)*.+class\s+\w+.*</KEY>
+          <VALUE>/**\n
+ * The type ${name}.\n
+&lt;#if element.typeParameters?has_content&gt;        * \n
+&lt;/#if&gt;
+&lt;#list element.typeParameters as typeParameter&gt;
+        * @param &lt;${typeParameter.name}&gt; the type parameter\n
+&lt;/#list&gt;
+ */</VALUE>
+        </CLASS>
+        <CLASS>
+          <KEY>.+</KEY>
+          <VALUE>/**\n
+ * The type ${name}.\n
+ */</VALUE>
+        </CLASS>
+      </CLASSES>
+      <CONSTRUCTORS>
+        <CONSTRUCTOR>
+          <KEY>.+</KEY>
+          <VALUE>/**\n
+ * Instantiates a new ${name}.\n
+&lt;#if element.parameterList.parameters?has_content&gt;
+         *\n
+&lt;/#if&gt;
+&lt;#list element.parameterList.parameters as parameter&gt;
+         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
+&lt;/#list&gt;
+&lt;#if element.throwsList.referenceElements?has_content&gt;
+         *\n
+&lt;/#if&gt;
+&lt;#list element.throwsList.referenceElements as exception&gt;
+         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
+&lt;/#list&gt;
+ */</VALUE>
+        </CONSTRUCTOR>
+      </CONSTRUCTORS>
+      <METHODS>
+        <METHOD>
+          <KEY>^.*(public|protected|private)*\s*.*(\w(\s*&lt;.+&gt;)*)+\s+get\w+\s*\(.*\).+</KEY>
+          <VALUE>/**\n
+ * Gets ${partName}.\n
+&lt;#if element.typeParameters?has_content&gt;         * \n
+&lt;/#if&gt;
+&lt;#list element.typeParameters as typeParameter&gt;
+         * @param &lt;${typeParameter.name}&gt; the type parameter\n
+&lt;/#list&gt;
+&lt;#if element.parameterList.parameters?has_content&gt;
+         *\n
+&lt;/#if&gt;
+&lt;#list element.parameterList.parameters as parameter&gt;
+         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
+&lt;/#list&gt;
+&lt;#if isNotVoid&gt;
+         *\n
+         * @return the ${partName}\n
+&lt;/#if&gt;
+&lt;#if element.throwsList.referenceElements?has_content&gt;
+         *\n
+&lt;/#if&gt;
+&lt;#list element.throwsList.referenceElements as exception&gt;
+         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
+&lt;/#list&gt;
+ */</VALUE>
+        </METHOD>
+        <METHOD>
+          <KEY>^.*(public|protected|private)*\s*.*(void|\w(\s*&lt;.+&gt;)*)+\s+set\w+\s*\(.*\).+</KEY>
+          <VALUE>/**\n
+ * Sets ${partName}.\n
+&lt;#if element.typeParameters?has_content&gt;         * \n
+&lt;/#if&gt;
+&lt;#list element.typeParameters as typeParameter&gt;
+         * @param &lt;${typeParameter.name}&gt; the type parameter\n
+&lt;/#list&gt;
+&lt;#if element.parameterList.parameters?has_content&gt;
+         *\n
+&lt;/#if&gt;
+&lt;#list element.parameterList.parameters as parameter&gt;
+         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
+&lt;/#list&gt;
+&lt;#if isNotVoid&gt;
+         *\n
+         * @return the ${partName}\n
+&lt;/#if&gt;
+&lt;#if element.throwsList.referenceElements?has_content&gt;
+         *\n
+&lt;/#if&gt;
+&lt;#list element.throwsList.referenceElements as exception&gt;
+         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
+&lt;/#list&gt;
+ */</VALUE>
+        </METHOD>
+        <METHOD>
+          <KEY>^.*((public\s+static)|(static\s+public))\s+void\s+main\s*\(\s*String\s*(\[\s*\]|\.\.\.)\s+\w+\s*\).+</KEY>
+          <VALUE>/**\n
+ * The entry point of application.\n
+
+     &lt;#if element.parameterList.parameters?has_content&gt;
+         *\n
+&lt;/#if&gt;
+     * @param ${element.parameterList.parameters[0].name} the input arguments\n
+&lt;#if element.throwsList.referenceElements?has_content&gt;
+         *\n
+&lt;/#if&gt;
+&lt;#list element.throwsList.referenceElements as exception&gt;
+         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
+&lt;/#list&gt;
+ */</VALUE>
+        </METHOD>
+        <METHOD>
+          <KEY>.+</KEY>
+          <VALUE>/**\n
+ * ${name}&lt;#if isNotVoid&gt; ${return}&lt;/#if&gt;.\n
+&lt;#if element.typeParameters?has_content&gt;         * \n
+&lt;/#if&gt;
+&lt;#list element.typeParameters as typeParameter&gt;
+         * @param &lt;${typeParameter.name}&gt; the type parameter\n
+&lt;/#list&gt;
+&lt;#if element.parameterList.parameters?has_content&gt;
+         *\n
+&lt;/#if&gt;
+&lt;#list element.parameterList.parameters as parameter&gt;
+         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
+&lt;/#list&gt;
+&lt;#if isNotVoid&gt;
+         *\n
+         * @return the ${return}\n
+&lt;/#if&gt;
+&lt;#if element.throwsList.referenceElements?has_content&gt;
+         *\n
+&lt;/#if&gt;
+&lt;#list element.throwsList.referenceElements as exception&gt;
+         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
+&lt;/#list&gt;
+ */</VALUE>
+        </METHOD>
+      </METHODS>
+      <FIELDS>
+        <FIELD>
+          <KEY>^.*(public|protected|private)*.+static.*(\w\s\w)+.+</KEY>
+          <VALUE>/**\n
+ * The constant ${element.getName()}.\n
+ */</VALUE>
+        </FIELD>
+        <FIELD>
+          <KEY>^.*(public|protected|private)*.*(\w\s\w)+.+</KEY>
+          <VALUE>/**\n
+    &lt;#if element.parent.isInterface()&gt;
+        * The constant ${element.getName()}.\n
+&lt;#else&gt;
+        * The ${name}.\n
+&lt;/#if&gt; */</VALUE>
+        </FIELD>
+        <FIELD>
+          <KEY>.+</KEY>
+          <VALUE>/**\n
+    &lt;#if element.parent.isEnum()&gt;
+        *${name} ${typeName}.\n
+&lt;#else&gt;
+        * The ${name}.\n
+&lt;/#if&gt;*/</VALUE>
+        </FIELD>
+      </FIELDS>
+    </TEMPLATES>
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/java/com/example/bookshelf/Book.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.bookshelf;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Objects;\r\nimport java.util.concurrent.ThreadLocalRandom;\r\n\r\npublic class Book implements Serializable {\r\n    private String Title;\r\n    private String Author;\r\n    private Long ISBN;\r\n    private String photoURL;\r\n    private BookStatus Status;\r\n    private String ownerUsername;\r\n    private String description;\r\n    int id_number = ThreadLocalRandom.current().nextInt();\r\n\r\n    public enum BookStatus{Available, Requested, Accepted, Borrowed, Loaned};\r\n\r\n        public Book(String title, String author, Long ISBN, String photoURL, String description) {\r\n        this.Title = title;\r\n        this.Author = author;\r\n        this.ISBN = ISBN;\r\n        this.Status = BookStatus.Available;\r\n        this.photoURL = photoURL;\r\n        this.description = description;\r\n    }\r\n\r\n    public Book(String title, String author, Long ISBN, String photoURL) {\r\n        Title = title;\r\n        Author = author;\r\n        this.ISBN = ISBN;\r\n        this.photoURL = photoURL;\r\n        this.Status = BookStatus.Available;\r\n    }\r\n\r\n    public Book(String title, String author, Long ISBN) {\r\n        this.Title = title;\r\n        this.Author = author;\r\n        this.ISBN = ISBN;\r\n        this.Status = BookStatus.Available;\r\n    }\r\n    public Book(String title, String author, String description, Long ISBN) {\r\n        Title = title;\r\n        Author = author;\r\n        this.description = description;\r\n        this.ISBN = ISBN;\r\n        this.Status = BookStatus.Available;\r\n    }\r\n\r\n    public String getTitle() {\r\n        return Title;\r\n    }\r\n\r\n    public void setTitle(String title) {\r\n        Title = title;\r\n    }\r\n\r\n    public String getAuthor() {\r\n        return Author;\r\n    }\r\n\r\n    public void setAuthor(String author) {\r\n        Author = author;\r\n    }\r\n\r\n    public Long getISBN() {\r\n        return ISBN;\r\n    }\r\n\r\n    public void setISBN(Long ISBN) {\r\n        this.ISBN = ISBN;\r\n    }\r\n\r\n    public String getPhotoURL() {\r\n        return photoURL;\r\n    }\r\n\r\n    public void setPhotoURL(String photoURL) {\r\n        this.photoURL = photoURL;\r\n    }\r\n\r\n    public BookStatus getStatus() {\r\n        return Status;\r\n    }\r\n\r\n    public void setStatus(BookStatus status) {\r\n        Status = status;\r\n    }\r\n\r\n    public String getOwnerUsername() {\r\n        return ownerUsername;\r\n    }\r\n\r\n    public void setOwnerUsername(String ownerUsername) {\r\n        this.ownerUsername = ownerUsername;\r\n    }\r\n\r\n    public String getDescription() {\r\n        return description;\r\n    }\r\n\r\n    public void setDescription(String description) {\r\n        this.description = description;\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(Object o) {\r\n        if (this == o) return true;\r\n        if (o == null || getClass() != o.getClass()) return false;\r\n        Book book = (Book) o;\r\n        return Title.equals(book.Title) &&\r\n                Author.equals(book.Author) &&\r\n                ISBN.equals(book.ISBN) &&\r\n                ownerUsername.equals(book.ownerUsername) &&\r\n                (id_number==book.id_number)&&\r\n                Objects.equals(description, book.description);\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        return Objects.hash(Title, ISBN, id_number);\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/bookshelf/Book.java	(revision 6d394e20571aa26e38c8ef50d44ec1da53e13d0c)
+++ app/src/main/java/com/example/bookshelf/Book.java	(date 1604609893324)
@@ -4,6 +4,9 @@
 import java.util.Objects;
 import java.util.concurrent.ThreadLocalRandom;
 
+/**
+ * The type Book.
+ */
 public class Book implements Serializable {
     private String Title;
     private String Author;
@@ -12,11 +15,46 @@
     private BookStatus Status;
     private String ownerUsername;
     private String description;
+    /**
+     * The Id number.
+     */
     int id_number = ThreadLocalRandom.current().nextInt();
 
-    public enum BookStatus{Available, Requested, Accepted, Borrowed, Loaned};
+    /**
+     * The enum Book status.
+     */
+    public enum BookStatus{
+        /**
+         * Available book status.
+         */
+        Available,
+        /**
+         * Requested book status.
+         */
+        Requested,
+        /**
+         * Accepted book status.
+         */
+        Accepted,
+        /**
+         * Borrowed book status.
+         */
+        Borrowed,
+        /**
+         * Loaned book status.
+         */
+        Loaned};
 
-        public Book(String title, String author, Long ISBN, String photoURL, String description) {
+    /**
+     * Instantiates a new Book.
+     *
+     * @param title       the title
+     * @param author      the author
+     * @param ISBN        the isbn
+     * @param photoURL    url to book cover
+     * @param description short  description
+     */
+    public Book(String title, String author, Long ISBN, String photoURL, String description) {
         this.Title = title;
         this.Author = author;
         this.ISBN = ISBN;
@@ -25,6 +63,14 @@
         this.description = description;
     }
 
+    /**
+     * Instantiates a new Book.
+     *
+     * @param title    the title
+     * @param author   the author
+     * @param ISBN     the isbn
+     * @param photoURL url to book cover
+     */
     public Book(String title, String author, Long ISBN, String photoURL) {
         Title = title;
         Author = author;
@@ -33,12 +79,28 @@
         this.Status = BookStatus.Available;
     }
 
+    /**
+     * Instantiates a new Book.
+     *
+     * @param title  the title
+     * @param author the author
+     * @param ISBN   the isbn
+     */
     public Book(String title, String author, Long ISBN) {
         this.Title = title;
         this.Author = author;
         this.ISBN = ISBN;
         this.Status = BookStatus.Available;
     }
+
+    /**
+     * Instantiates a new Book.
+     *
+     * @param title       the title
+     * @param author      the author
+     * @param description the description
+     * @param ISBN        the isbn
+     */
     public Book(String title, String author, String description, Long ISBN) {
         Title = title;
         Author = author;
@@ -47,58 +109,128 @@
         this.Status = BookStatus.Available;
     }
 
+    /**
+     * Gets title.
+     *
+     * @return the title
+     */
     public String getTitle() {
         return Title;
     }
 
+    /**
+     * Sets title.
+     *
+     * @param title the title
+     */
     public void setTitle(String title) {
         Title = title;
     }
 
+    /**
+     * Gets author.
+     *
+     * @return the author
+     */
     public String getAuthor() {
         return Author;
     }
 
+    /**
+     * Sets author.
+     *
+     * @param author the author
+     */
     public void setAuthor(String author) {
         Author = author;
     }
 
+    /**
+     * Gets isbn.
+     *
+     * @return the isbn
+     */
     public Long getISBN() {
         return ISBN;
     }
 
+    /**
+     * Sets isbn.
+     *
+     * @param ISBN the isbn
+     */
     public void setISBN(Long ISBN) {
         this.ISBN = ISBN;
     }
 
+    /**
+     * Gets photo url.
+     *
+     * @return the photo url
+     */
     public String getPhotoURL() {
         return photoURL;
     }
 
+    /**
+     * Sets photo url.
+     *
+     * @param photoURL the photo url
+     */
     public void setPhotoURL(String photoURL) {
         this.photoURL = photoURL;
     }
 
+    /**
+     * Gets status.
+     *
+     * @return the status
+     */
     public BookStatus getStatus() {
         return Status;
     }
 
+    /**
+     * Sets status.
+     *
+     * @param status the status
+     */
     public void setStatus(BookStatus status) {
         Status = status;
     }
 
+    /**
+     * Gets owner username.
+     *
+     * @return the owner username
+     */
     public String getOwnerUsername() {
         return ownerUsername;
     }
 
+    /**
+     * Sets owner username.
+     *
+     * @param ownerUsername the owner username
+     */
     public void setOwnerUsername(String ownerUsername) {
         this.ownerUsername = ownerUsername;
     }
 
+    /**
+     * Gets description.
+     *
+     * @return the description
+     */
     public String getDescription() {
         return description;
     }
 
+    /**
+     * Sets description.
+     *
+     * @param description the description
+     */
     public void setDescription(String description) {
         this.description = description;
     }
